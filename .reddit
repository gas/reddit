#!/usr/bin/bash

# reddit2me v0.4: added some curl spinning with gum
# Usage: reddit 10 bash, reddit 5 commandline show, ...
# Dependencies: gum, fzf, xmllint, html-utils, recode for previews; curl for headlines.
# todo: reformating, api login (+posts?), crontab download subscritions... 

reddit2me() 
{
local _howmany=${1:-5} _subname=${2} _sub="https://www.reddit.com/r/${2:-bash}.rss" _dir="$HOME/.redditnews"
mkdir $_dir > /dev/null 2>&1

# index
gum spin --spinner dot --title "Obteniendo $_howmany entradas de r/$_subname..." -- \
    curl -s -o $_dir/news_${_subname}  -A "reddit_bash_script (KHTML, like Gecko) Version/14.1.1 Safari/605.1.15" $_sub

# just headlines
if [[ -z ${3} ]]; then 
    xmllint --format $_dir/news_${_subname} | grep "<title>" | sed "s/<title>//g;s/<\/title>//;" \
    | sed 's/^    /· /' | tail -n +2 | head -n $_howmany
    return 1
fi

# headlines + content

# links
xmllint --format $_dir/news_${_subname} | grep "<link href" \
    | sed "s/<link href=\"//g;s/\/\"\/>/.rss/;" \
    | head -n $_howmany > $_dir/links_${_subname}

# loop of contents
local _x=1
cat $_dir/links_${_subname} | while read line # || [[ -n $line ]];
do  
    # curl
# gum spin --spinner dot --title "Cargando entrada $_x/$_howmany de r/$_subname..." -- \
gum spin --spinner dot --title "Descargando entrada $_x/$_howmany desde r/$_subname..." \
    --spinner.foreground="123" --spinner.width="15" --spinner.align="right" \
    --spinner.italic --title.italic -- \
    curl -s -o $_dir/news_${_subname}_${_x}  \
    -A "reddit_bash_script (KHTML, like Gecko) Version/14.1.1 Safari/605.1.15" $line
    # xmllint
    # xmllint --format --xmlout ${_dir}/news_${_x} | recode html..ascii 2>/dev/null \
    #    | xmllint --html --xpath "//feed/entry/author/name|//feed/entry/updated|//div[@class='md']" \
    #    - > ${_dir}/news_${_x}.rss 2>/dev/null && cat ${_dir}/news_${_x}.rss \
    #    | sed "s/<updated>/***\n- Updated: /g;s/<\/updated>//;" \
    #    | sed "s/<name>/- Author: /g;s/<\/name>//;" \
    #    | sed "s/<div class=\"md\">/- Content:\n /g;s/<\/div>//;" \
    #    | sed "s/<p>//g;s/<\/p>/\n/g;" \
    #    | sed "s/<blockquote>/\> /g;s/<\/blockquote>/\n/g;" \
    #    | sed "s/<pre><code>/\`\`\`\n/g;s/<\/code><\/pre>/\`\`\`\n/g;" \
    #    | sed "s/<code>/\`/g;s/<\/code>/\`/g;" | sed 's/<a href="\(.*\)">\(.*\)<\/a>/[\2](\1)/' \
    #    > ${_dir}/news_${_x}.md

    cat ${_dir}/news_${_subname}_${_x} | recode html..ascii 2>/dev/null \
        | hxnormalize -x \
        | hxselect -s "\n" name, "div[class=md]" \
        | sed 's/<name>/## /g;s/<\/name>//g;s/<div class=\"md\">//g;s/<\/div>/-\n***/g;' \
        | sed 's/<p>//g;s/<\/p>//g;s/<hr><\/hr>//g;/^$/d;' \
        | sed 's/<a href="\(.*\)">\(.*\s*\)*<\/a>/[\2](\1)/' \
        | sed 's/\s*<pre><code>/\n\`\`\`\n/g;s/\s*<\/code><\/pre>/\n\`\`\`/g;' \
        | sed 's/\s*<blockquote>/\`\`\`\n/g;s/\s*<\/blockquote>/\n\`\`\`/g;s/<ol>$//g;s/<\/ol>$//g;s/<ul>$//g;s/<\/ul>$//g;s/<li>/- /g;s/<\/li>//g;' \
        | sed 's/<strong>/*/g;s/<\/strong>/*/g;s/<em>//g;s/<\/em>//g;' \
        | sed 's/<br><\/br>//g;' | sed 's/\s*<pre>/\`\`\`\n/g;' \
        | sed -r 's/\s*<\/pre>\s*/\`\`\`\n/g;s/<code>/\`/g;s/<\/code>/\`/g;' \
        | hxunent \
        > ${_dir}/news_${_subname}_${_x}.md

    _x=$(( $_x + 1 ))
done

# headlines + fzf
xmllint --format ${_dir}/news_${_subname} | grep "<title>" | sed "s/<title>//g;s/<\/title>//;" \
    | sed 's/^    /· /' | tail -n +2 | head -n $_howmany | cat -n \
    | fzf --reverse --preview " _preview {1} ${_subname}" \
    --preview-window=down,80% --header=$_sub

}

_preview() {
    local _dir="$HOME/.redditnews" _subname=${2}
    #echo "bat -p -l md ${_dir}/news_${_subname}_${1}.md"
    bat -p -l md --color=always "${_dir}/news_${_subname}_${1}.md"
    # echo $_index
}
export -f _preview
